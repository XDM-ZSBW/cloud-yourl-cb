name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: yourl-cloud
  SERVICE_NAME: clipboard-bridge
  REGION: us-west1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Run linting
        run: npm run lint
        
      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          
      - name: Setup Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        
      - name: Configure Docker
        run: gcloud auth configure-docker
        
      - name: Build and push image
        run: |
          docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} .
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}
          
      - name: Get existing environment variables
        id: get-env
        run: |
          # Get existing environment variables from current service
          EXISTING_ENV=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format="value(spec.template.spec.containers[0].env[].name,spec.template.spec.containers[0].env[].value)" 2>/dev/null || echo "")
          echo "existing_env=$EXISTING_ENV" >> $GITHUB_OUTPUT
          
      - name: Deploy to Cloud Run
        run: |
          # Prepare environment variables
          ENV_VARS="NODE_ENV=production,PORT=3000,JWT_EXPIRES_IN=24h,ALLOWED_ORIGINS=https://cb.yourl.cloud,https://yourl.cloud"
          
          # Add existing MongoDB URI and JWT Secret if they exist
          if [[ "${{ steps.get-env.outputs.existing_env }}" == *"MONGODB_URI"* ]]; then
            MONGODB_URI=$(echo "${{ steps.get-env.outputs.existing_env }}" | grep "MONGODB_URI" | cut -d' ' -f2)
            ENV_VARS="$ENV_VARS,MONGODB_URI=$MONGODB_URI"
          fi
          
          if [[ "${{ steps.get-env.outputs.existing_env }}" == *"JWT_SECRET"* ]]; then
            JWT_SECRET=$(echo "${{ steps.get-env.outputs.existing_env }}" | grep "JWT_SECRET" | cut -d' ' -f2)
            ENV_VARS="$ENV_VARS,JWT_SECRET=$JWT_SECRET"
          fi
          
          echo "Using environment variables: $ENV_VARS"
          
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --port 3000 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10 \
            --set-env-vars "$ENV_VARS"
            
      - name: Show service URL
        run: |
          gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)'
